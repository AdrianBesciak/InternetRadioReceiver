/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef VOLUMEPANELBASE_HPP
#define VOLUMEPANELBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/RepeatButton.hpp>

class VolumePanelBase : public touchgfx::Container
{
public:
    VolumePanelBase();
    virtual ~VolumePanelBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void handleVolumePlusClicked()
    {
        // Override and implement this function in VolumePanel
    }

    virtual void handleVolumeMinusClicked()
    {
        // Override and implement this function in VolumePanel
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TextAreaWithOneWildcard volumeText;
    touchgfx::RepeatButton volumeMinusButton;
    touchgfx::RepeatButton volumePlusButton;

    /*
     * Wildcard Buffers
     */
    static const uint16_t VOLUMETEXT_SIZE = 4;
    touchgfx::Unicode::UnicodeChar volumeTextBuffer[VOLUMETEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<VolumePanelBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // VOLUMEPANELBASE_HPP
