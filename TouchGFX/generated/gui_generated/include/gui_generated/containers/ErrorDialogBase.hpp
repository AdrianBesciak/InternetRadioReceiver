/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ERRORDIALOGBASE_HPP
#define ERRORDIALOGBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Image.hpp>

class ErrorDialogBase : public touchgfx::Container
{
public:
    ErrorDialogBase();
    virtual ~ErrorDialogBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void handleDismissButtonClicked()
    {
        // Override and implement this function in ErrorDialog
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::ModalWindow modalWindow;
    touchgfx::ButtonWithLabel dismissButton;
    touchgfx::TextAreaWithOneWildcard errorMessageText;
    touchgfx::TextArea errorTitleText;
    touchgfx::Image image1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t ERRORMESSAGETEXT_SIZE = 140;
    touchgfx::Unicode::UnicodeChar errorMessageTextBuffer[ERRORMESSAGETEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ErrorDialogBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // ERRORDIALOGBASE_HPP
