/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MEMORYSCREENVIEWBASE_HPP
#define MEMORYSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/memoryscreen_screen/MemoryScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/ControlPanelSD.hpp>
#include <gui/containers/TimePanelSD.hpp>
#include <gui/containers/TitleView.hpp>
#include <gui/containers/VolumePanel.hpp>
#include <gui/containers/PeripheralStateIndicators.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/listItem_notSelected.hpp>
#include <gui/containers/listItem_selected.hpp>
#include <gui/containers/ScreenNavigator.hpp>

class MemoryScreenViewBase : public touchgfx::View<MemoryScreenPresenter>
{
public:
    MemoryScreenViewBase();
    virtual ~MemoryScreenViewBase() {}
    virtual void setupScreen();

    virtual void PlayQueueUpdateItem(listItem_notSelected& item, int16_t itemIndex)
    {
        // Override and implement this function in MemoryScreen
    }

    virtual void PlayQueueUpdateCenterItem(listItem_selected& item, int16_t itemIndex)
    {
        // Override and implement this function in MemoryScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    ControlPanelSD controlPanel;
    TimePanelSD timePanel;
    TitleView titleView;
    VolumePanel volumePanel;
    PeripheralStateIndicators peripheralStateIndicators;
    touchgfx::Image sdCardIcon;
    touchgfx::SlideMenu slideMenuRight;
    touchgfx::ScrollWheelWithSelectionStyle PlayQueue;
    touchgfx::DrawableListItems<listItem_notSelected, 11> PlayQueueListItems;
    touchgfx::DrawableListItems<listItem_selected, 2> PlayQueueSelectedListItems;
    ScreenNavigator screenNavigator;

private:
    touchgfx::Callback<MemoryScreenViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // MEMORYSCREENVIEWBASE_HPP
