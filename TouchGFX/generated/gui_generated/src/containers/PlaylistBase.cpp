/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/PlaylistBase.hpp>
#include <BitmapDatabase.hpp>

PlaylistBase::PlaylistBase() :
    updateItemCallback(this, &PlaylistBase::updateItemCallbackHandler)
{
    setWidth(202);
    setHeight(272);
    slideMenuRight.setup(touchgfx::SlideMenu::WEST,
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BACKGROUND_ID),
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BUTTON_ID),
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BUTTON_ID),
        18, 0, 0, 110);
    slideMenuRight.setState(touchgfx::SlideMenu::COLLAPSED);
    slideMenuRight.setVisiblePixelsWhenCollapsed(25);
    slideMenuRight.setHiddenPixelsWhenExpanded(0);
    slideMenuRight.setAnimationEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
    slideMenuRight.setAnimationDuration(18);
    slideMenuRight.setExpandedStateTimeout(0);
    slideMenuRight.setXY(0, 0);

    list.setPosition(25, 0, 175, 272);
    list.setHorizontal(false);
    list.setCircular(false);
    list.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    list.setSwipeAcceleration(10);
    list.setDragAcceleration(10);
    list.setNumberOfItems(0);
    list.setPadding(0, 0);
    list.setSnapping(true);
    list.setDrawableSize(29, 0);
    list.setDrawables(listListItems, updateItemCallback);
    slideMenuRight.add(list);

    add(slideMenuRight);
}

void PlaylistBase::initialize()
{
    list.initialize();
    for (int i = 0; i < listListItems.getNumberOfDrawables(); i++)
    {
        listListItems[i].initialize();
    }
}

void PlaylistBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &listListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        ListItem* cc = (ListItem*)d;
        listUpdateItem(*cc, itemIndex);
    }
}

