/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/radioscreen_screen/RadioScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>

RadioScreenViewBase::RadioScreenViewBase() :
    updateItemCallback(this, &RadioScreenViewBase::updateItemCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    controlPanel.setXY(215, 200);

    timePanel.setXY(210, 160);

    titleView.setXY(40, 125);

    volumePanel.setXY(95, 15);

    peripheralStateIndicators.setXY(370, 10);

    radioIcon.setXY(20, 20);
    radioIcon.setBitmap(touchgfx::Bitmap(BITMAP_RADIO_ID));

    slideMenuRight.setup(touchgfx::SlideMenu::WEST,
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BACKGROUND_ID),
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BUTTON_ID),
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BUTTON_ID),
        18, 0, 0, 110);
    slideMenuRight.setState(touchgfx::SlideMenu::COLLAPSED);
    slideMenuRight.setVisiblePixelsWhenCollapsed(25);
    slideMenuRight.setHiddenPixelsWhenExpanded(0);
    slideMenuRight.setAnimationEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
    slideMenuRight.setAnimationDuration(18);
    slideMenuRight.setExpandedStateTimeout(180);
    slideMenuRight.setXY(278, 0);

    RadioStations.setPosition(27, 2, 170, 272);
    RadioStations.setHorizontal(false);
    RadioStations.setCircular(false);
    RadioStations.setEasingEquation(touchgfx::EasingEquations::quadEaseInOut);
    RadioStations.setSwipeAcceleration(10);
    RadioStations.setDragAcceleration(10);
    RadioStations.setNumberOfItems(10);
    RadioStations.setSelectedItemOffset(0);
    RadioStations.setDrawableSize(30, 0);
    RadioStations.setDrawables(RadioStationsListItems, updateItemCallback);
    RadioStations.animateToItem(0, 0);
    slideMenuRight.add(RadioStations);

    screenNavigator.setXY(0, 0);

    add(__background);
    add(controlPanel);
    add(timePanel);
    add(titleView);
    add(volumePanel);
    add(peripheralStateIndicators);
    add(radioIcon);
    add(slideMenuRight);
    add(screenNavigator);
}

void RadioScreenViewBase::setupScreen()
{
    controlPanel.initialize();
    timePanel.initialize();
    titleView.initialize();
    volumePanel.initialize();
    peripheralStateIndicators.initialize();
    RadioStations.initialize();
    for (int i = 0; i < RadioStationsListItems.getNumberOfDrawables(); i++)
    {
        RadioStationsListItems[i].initialize();
    }
    screenNavigator.initialize();
}

void RadioScreenViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &RadioStationsListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        listItem_notSelected* cc = (listItem_notSelected*)d;
        RadioStationsUpdateItem(*cc, itemIndex);
    }
}
